// Mocks generated by Mockito 5.4.6 from annotations
// in gopay_task/test/unit_test/transfer/transaction_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:flutter/widgets.dart' as _i10;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i6;
import 'package:gopay_task/controllers/gopaysaldo_controller.dart' as _i3;
import 'package:gopay_task/controllers/historytransaction_controller.dart'
    as _i8;
import 'package:gopay_task/models/transaction_model.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternalFinalCallback_0<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxList_1<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRx_2<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxSet_3<E> extends _i1.SmartFake implements _i2.RxSet<E> {
  _FakeRxSet_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxInt_4 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GopaySaldoController].
///
/// See the documentation for Mockito's code generation for more information.
class MockGopaySaldoController extends _i1.Mock
    implements _i3.GopaySaldoController {
  MockGopaySaldoController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get saldo =>
      (super.noSuchMethod(Invocation.getter(#saldo), returnValue: 0) as int);

  @override
  String get formattedSaldo =>
      (super.noSuchMethod(
            Invocation.getter(#formattedSaldo),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#formattedSaldo),
            ),
          )
          as String);

  @override
  _i2.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(
            Invocation.getter(#onStart),
            returnValue: _FakeInternalFinalCallback_0<void>(
              this,
              Invocation.getter(#onStart),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(
            Invocation.getter(#onDelete),
            returnValue: _FakeInternalFinalCallback_0<void>(
              this,
              Invocation.getter(#onDelete),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  int get listeners =>
      (super.noSuchMethod(Invocation.getter(#listeners), returnValue: 0)
          as int);

  @override
  void onInit() => super.noSuchMethod(
    Invocation.method(#onInit, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadSaldo() =>
      (super.noSuchMethod(
            Invocation.method(#loadSaldo, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addSaldo(int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#addSaldo, [amount]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> deductSaldo(int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#deductSaldo, [amount]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  bool hasSufficientSaldo(int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#hasSufficientSaldo, [amount]),
            returnValue: false,
          )
          as bool);

  @override
  void setInitialBalance(int? amount) => super.noSuchMethod(
    Invocation.method(#setInitialBalance, [amount]),
    returnValueForMissingStub: null,
  );

  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(
        Invocation.method(#update, [ids, condition]),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
    Invocation.method(#onReady, []),
    returnValueForMissingStub: null,
  );

  @override
  void onClose() => super.noSuchMethod(
    Invocation.method(#onClose, []),
    returnValueForMissingStub: null,
  );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
    Invocation.method(#$configureLifeCycle, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListener(_i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListener, [listener]),
            returnValue: () {},
          )
          as _i6.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
    Invocation.method(#refreshGroup, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyChildrens() => super.noSuchMethod(
    Invocation.method(#notifyChildrens, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeListenerId(Object? id, _i7.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeListenerId, [id, listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListenerId(Object? key, _i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListenerId, [key, listener]),
            returnValue: () {},
          )
          as _i6.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
    Invocation.method(#disposeId, [id]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [HistoryTransactionController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHistoryTransactionController extends _i1.Mock
    implements _i8.HistoryTransactionController {
  MockHistoryTransactionController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxList<_i9.TransactionModel> get transactions =>
      (super.noSuchMethod(
            Invocation.getter(#transactions),
            returnValue: _FakeRxList_1<_i9.TransactionModel>(
              this,
              Invocation.getter(#transactions),
            ),
          )
          as _i2.RxList<_i9.TransactionModel>);

  @override
  _i2.RxList<_i9.TransactionModel> get filteredTransactions =>
      (super.noSuchMethod(
            Invocation.getter(#filteredTransactions),
            returnValue: _FakeRxList_1<_i9.TransactionModel>(
              this,
              Invocation.getter(#filteredTransactions),
            ),
          )
          as _i2.RxList<_i9.TransactionModel>);

  @override
  _i2.Rx<DateTime?> get startDateFilter =>
      (super.noSuchMethod(
            Invocation.getter(#startDateFilter),
            returnValue: _FakeRx_2<DateTime?>(
              this,
              Invocation.getter(#startDateFilter),
            ),
          )
          as _i2.Rx<DateTime?>);

  @override
  _i2.Rx<DateTime?> get endDateFilter =>
      (super.noSuchMethod(
            Invocation.getter(#endDateFilter),
            returnValue: _FakeRx_2<DateTime?>(
              this,
              Invocation.getter(#endDateFilter),
            ),
          )
          as _i2.Rx<DateTime?>);

  @override
  _i2.RxSet<_i9.TransactionType> get selectedServiceTypes =>
      (super.noSuchMethod(
            Invocation.getter(#selectedServiceTypes),
            returnValue: _FakeRxSet_3<_i9.TransactionType>(
              this,
              Invocation.getter(#selectedServiceTypes),
            ),
          )
          as _i2.RxSet<_i9.TransactionType>);

  @override
  _i2.RxInt get selectedFilterIndex =>
      (super.noSuchMethod(
            Invocation.getter(#selectedFilterIndex),
            returnValue: _FakeRxInt_4(
              this,
              Invocation.getter(#selectedFilterIndex),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.Rx<DateTime> get customStartDate =>
      (super.noSuchMethod(
            Invocation.getter(#customStartDate),
            returnValue: _FakeRx_2<DateTime>(
              this,
              Invocation.getter(#customStartDate),
            ),
          )
          as _i2.Rx<DateTime>);

  @override
  _i2.Rx<DateTime> get customEndDate =>
      (super.noSuchMethod(
            Invocation.getter(#customEndDate),
            returnValue: _FakeRx_2<DateTime>(
              this,
              Invocation.getter(#customEndDate),
            ),
          )
          as _i2.Rx<DateTime>);

  @override
  bool get hasActiveFilter =>
      (super.noSuchMethod(
            Invocation.getter(#hasActiveFilter),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasActiveServiceFilter =>
      (super.noSuchMethod(
            Invocation.getter(#hasActiveServiceFilter),
            returnValue: false,
          )
          as bool);

  @override
  set startDateFilter(_i2.Rx<DateTime?>? _startDateFilter) =>
      super.noSuchMethod(
        Invocation.setter(#startDateFilter, _startDateFilter),
        returnValueForMissingStub: null,
      );

  @override
  set endDateFilter(_i2.Rx<DateTime?>? _endDateFilter) => super.noSuchMethod(
    Invocation.setter(#endDateFilter, _endDateFilter),
    returnValueForMissingStub: null,
  );

  @override
  set selectedServiceTypes(
    _i2.RxSet<_i9.TransactionType>? _selectedServiceTypes,
  ) => super.noSuchMethod(
    Invocation.setter(#selectedServiceTypes, _selectedServiceTypes),
    returnValueForMissingStub: null,
  );

  @override
  set selectedFilterIndex(_i2.RxInt? _selectedFilterIndex) =>
      super.noSuchMethod(
        Invocation.setter(#selectedFilterIndex, _selectedFilterIndex),
        returnValueForMissingStub: null,
      );

  @override
  set customStartDate(_i2.Rx<DateTime>? _customStartDate) => super.noSuchMethod(
    Invocation.setter(#customStartDate, _customStartDate),
    returnValueForMissingStub: null,
  );

  @override
  set customEndDate(_i2.Rx<DateTime>? _customEndDate) => super.noSuchMethod(
    Invocation.setter(#customEndDate, _customEndDate),
    returnValueForMissingStub: null,
  );

  @override
  _i2.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(
            Invocation.getter(#onStart),
            returnValue: _FakeInternalFinalCallback_0<void>(
              this,
              Invocation.getter(#onStart),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(
            Invocation.getter(#onDelete),
            returnValue: _FakeInternalFinalCallback_0<void>(
              this,
              Invocation.getter(#onDelete),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  int get listeners =>
      (super.noSuchMethod(Invocation.getter(#listeners), returnValue: 0)
          as int);

  @override
  void onInit() => super.noSuchMethod(
    Invocation.method(#onInit, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> saveFilterState() =>
      (super.noSuchMethod(
            Invocation.method(#saveFilterState, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveServiceFilter() =>
      (super.noSuchMethod(
            Invocation.method(#saveServiceFilter, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadFilterState() =>
      (super.noSuchMethod(
            Invocation.method(#loadFilterState, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadServiceFilter() =>
      (super.noSuchMethod(
            Invocation.method(#loadServiceFilter, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setFilter(int? filterIndex, {DateTime? startDate, DateTime? endDate}) =>
      super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [filterIndex],
          {#startDate: startDate, #endDate: endDate},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleServiceFilter(_i9.TransactionType? serviceType) =>
      super.noSuchMethod(
        Invocation.method(#toggleServiceFilter, [serviceType]),
        returnValueForMissingStub: null,
      );

  @override
  void applyServiceFilter() => super.noSuchMethod(
    Invocation.method(#applyServiceFilter, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetServiceFilter() => super.noSuchMethod(
    Invocation.method(#resetServiceFilter, []),
    returnValueForMissingStub: null,
  );

  @override
  void applyAllFilters() => super.noSuchMethod(
    Invocation.method(#applyAllFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetAllFilters() => super.noSuchMethod(
    Invocation.method(#resetAllFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#loadTransactions, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#saveTransactions, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addTransaction(
    _i9.TransactionType? type,
    double? amount,
    String? description, {
    String? secondaryDescription,
    String? paymentMethod = 'GoPay Saldo',
    DateTime? transactionDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addTransaction,
              [type, amount, description],
              {
                #secondaryDescription: secondaryDescription,
                #paymentMethod: paymentMethod,
                #transactionDate: transactionDate,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i9.TransactionModel> getTransactionsByDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getTransactionsByDate, [date]),
            returnValue: <_i9.TransactionModel>[],
          )
          as List<_i9.TransactionModel>);

  @override
  List<DateTime> getUniqueDates() =>
      (super.noSuchMethod(
            Invocation.method(#getUniqueDates, []),
            returnValue: <DateTime>[],
          )
          as List<DateTime>);

  @override
  void filterTransactionsByDateRange(
    DateTime? startDate,
    DateTime? endDate, {
    bool? saveState = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #filterTransactionsByDateRange,
      [startDate, endDate],
      {#saveState: saveState},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void resetTransactionFilter() => super.noSuchMethod(
    Invocation.method(#resetTransactionFilter, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<DateTime?> selectStartDate(
    _i10.BuildContext? context,
    DateTime? initialDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectStartDate, [
              context,
              initialDate,
              endDate,
            ]),
            returnValue: _i5.Future<DateTime?>.value(),
          )
          as _i5.Future<DateTime?>);

  @override
  _i5.Future<DateTime?> selectEndDate(
    _i10.BuildContext? context,
    DateTime? initialDate,
    DateTime? startDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectEndDate, [
              context,
              initialDate,
              startDate,
            ]),
            returnValue: _i5.Future<DateTime?>.value(),
          )
          as _i5.Future<DateTime?>);

  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(
        Invocation.method(#update, [ids, condition]),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
    Invocation.method(#onReady, []),
    returnValueForMissingStub: null,
  );

  @override
  void onClose() => super.noSuchMethod(
    Invocation.method(#onClose, []),
    returnValueForMissingStub: null,
  );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
    Invocation.method(#$configureLifeCycle, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListener(_i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListener, [listener]),
            returnValue: () {},
          )
          as _i6.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
    Invocation.method(#refreshGroup, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyChildrens() => super.noSuchMethod(
    Invocation.method(#notifyChildrens, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeListenerId(Object? id, _i7.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeListenerId, [id, listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListenerId(Object? key, _i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListenerId, [key, listener]),
            returnValue: () {},
          )
          as _i6.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
    Invocation.method(#disposeId, [id]),
    returnValueForMissingStub: null,
  );
}
